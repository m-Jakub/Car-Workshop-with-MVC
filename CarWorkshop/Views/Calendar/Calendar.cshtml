@model Dictionary<DateTime, List<CalendarEvent>>

<!DOCTYPE html>
<html>
<head>
    <title>Schedule</title>
    <style>
        /* Add border-collapse to the table */
        .table {
            border-collapse: collapse;
            width: 100%;
        }
        /* Style for table header */
        .table th {
            background-color: #f2f2f2;
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: left;
        }
        /* Style for table cells */
        .table td {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: left;
        }
        /* Style for time column */
        .time-column {
            width: 120px;
        }
        /* Style for day columns */
        .day-column {
            width: calc((100% - 100px) / 7); /* Divide remaining width equally among day columns */
        }
        /* Set background color for empty cells */
        .empty-cell {
            background-color: lightgray;
        }
    </style>
</head>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Include jQuery -->

<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Modal for selecting availability status -->
<div id="availabilityModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Select Availability Status</h2>
        <form id="availabilityForm">
            <label for="availabilityStatus">Availability Status:</label>
            <select id="availabilityStatus" name="availabilityStatus">
                <option value="Available">Available</option>
                <option value="Busy">Busy</option>
                <!-- Add more options as needed -->
            </select>
            <button type="submit">Confirm</button>
        </form>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.interactive-cell').on('click', function () {
            // Get date and hour from data attributes
            var date = $(this).data('date');
            var hour = $(this).data('hour');

            // Show the availability modal
            $('#availabilityModal').css('display', 'block');

            // When the user clicks on <span> (x), close the modal
            $('.close').on('click', function () {
                $('#availabilityModal').css('display', 'none');
            });

            // When the user clicks anywhere outside of the modal, close it
            $(window).on('click', function (event) {
                if (event.target == $('#availabilityModal')[0]) {
                    $('#availabilityModal').css('display', 'none');
                }
            });

            // Submit form when confirm button is clicked
            $('#availabilityForm').on('submit', function (event) {
                event.preventDefault();
                var availabilityStatus = $('#availabilityStatus').val();

                // Send AJAX request to the controller
                $.ajax({
                    url: '/Calendar/AddAvailabilitySlot',
                    type: 'POST',
                    data: {
                        date: date,
                        hour: hour,
                        availabilityStatus: availabilityStatus
                    },
                    success: function (response) {
                        // Handle success response
                        console.log(response);
                        $('#availabilityModal').css('display', 'none');
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    });
</script>



<body>

<h2>Schedule</h2>

<table class="table">
    <thead>
        <tr>
            <th class="time-column">Time</th> <!-- Set fixed width for the time column -->
            @foreach (DayOfWeek dayOfWeek in Enum.GetValues(typeof(DayOfWeek)))
            {
                <th class="day-column">@dayOfWeek.ToString().Substring(0, 3)</th> <!-- Set fixed width for the day columns -->
            }
        </tr>
    </thead>
    <tbody>
        @for (int hour = 6; hour < 20; hour++)
        {
            <tr>
                <td class="time-column">@hour:00 - @(hour + 1):00</td>
                @foreach (DayOfWeek dayOfWeek in Enum.GetValues(typeof(DayOfWeek)))
                {
                    var eventsForDay = Model.FirstOrDefault(x => x.Key.DayOfWeek == dayOfWeek).Value ?? new List<CalendarEvent>();
                    var eventsForHour = eventsForDay.Where(e => e.Date.Hour == hour).ToList();
                    <td class="day-column">
                        @if (eventsForHour.Any())
                        {
                            @foreach (var e in eventsForHour)
                            {
                                <div>@e.AvailabilityStatus</div>
                            }
                        }
                        else
                        {
                            <div class="empty-cell">&nbsp;</div> <!-- Placeholder for empty cell -->
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

</body>
</html>

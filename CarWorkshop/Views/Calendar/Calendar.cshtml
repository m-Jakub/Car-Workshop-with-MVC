@model Dictionary<DateTime, List<CalendarEvent>>

<!DOCTYPE html>
<html>

<head>

    <title>Schedule</title>
    <style>
        /* Add border-collapse to the table */
        .table {
            border-collapse: collapse;
            width: 100%;
        }

        /* Style for table header */
        .table th {
            background-color: #f2f2f2;
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: left;
        }

        /* Style for table cells */
        .table td {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: left;
        }

        /* Style for time column */
        .time-column {
            width: 120px;
        }

        /* Style for day columns */
        .day-column {
            width: calc((100% - 100px) / 7);
            /* Divide remaining width equally among day columns */
        }

        /* Style when cursor hovers over day columns */
        .day-column:hover {
            background-color: #f0f0f0;
            /* Light gray background color */
        }
    </style>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>

<body>

    <h2>Schedule</h2>

    <table class="table">
        <thead>
            <tr>
                <th class="time-column">Time</th> <!-- Set fixed width for the time column -->
                @foreach (DayOfWeek dayOfWeek in Enum.GetValues(typeof(DayOfWeek)))
                {
                    <th class="day-column">@dayOfWeek.ToString().Substring(0, 3)</th>
                    <!-- Set fixed width for the day columns -->
                }
            </tr>
        </thead>
        <tbody>
            @for (int hour = 6; hour < 20; hour++)
            {
                <tr>
                    <td class="time-column">@hour:00 - @(hour + 1):00</td>
                    @foreach (DayOfWeek dayOfWeek in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        var eventsForDay = Model.FirstOrDefault(x => x.Key.DayOfWeek == dayOfWeek).Value ?? new
                        List<CalendarEvent>();
                        var eventsForHour = eventsForDay.Where(e => e.Date.Hour == hour).ToList();
                        <td class="day-column"
                            onclick="showPopup(@hour, '@dayOfWeek', '@(eventsForHour.FirstOrDefault()?.AvailabilityStatus ?? "Unavailable")')">
                            @if (eventsForHour.Any())
                            {
                                @foreach (var e in eventsForHour)
                                {
                                    <div>@e.AvailabilityStatus</div>
                                }
                            }
                            else
                            {
                                <div class="empty-cell">&nbsp;</div> <!-- Placeholder for empty cell -->
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <!-- Popup modal -->
    <div class="modal fade" id="popupModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="eventDetails"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        function showPopup(hour, dayOfWeek, status) {
            // Set the content of the popup
            document.getElementById('eventDetails').innerText = `Time: ${hour}:00 - ${hour + 1}:00\nDay: ${dayOfWeek}\nStatus: ${status}`;

            // Show the popup modal
            $('#popupModal').modal('show');
        }
    </script>

</body>

</html>
